// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.5.1
// source: rdsbattle.proto

package rdsstruct

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RdsBattleSpacePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Display string            `protobuf:"bytes,2,opt,name=display,proto3" json:"display,omitempty"`
	Icon    string            `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Pos     int32             `protobuf:"varint,4,opt,name=pos,proto3" json:"pos,omitempty"`
	Role    string            `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Camp    string            `protobuf:"bytes,6,opt,name=camp,proto3" json:"camp,omitempty"`
	Ready   bool              `protobuf:"varint,7,opt,name=ready,proto3" json:"ready,omitempty"`
	Extends map[string]string `protobuf:"bytes,8,rep,name=extends,proto3" json:"extends,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RdsBattleSpacePlayer) Reset() {
	*x = RdsBattleSpacePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rdsbattle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdsBattleSpacePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdsBattleSpacePlayer) ProtoMessage() {}

func (x *RdsBattleSpacePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_rdsbattle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdsBattleSpacePlayer.ProtoReflect.Descriptor instead.
func (*RdsBattleSpacePlayer) Descriptor() ([]byte, []int) {
	return file_rdsbattle_proto_rawDescGZIP(), []int{0}
}

func (x *RdsBattleSpacePlayer) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RdsBattleSpacePlayer) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

func (x *RdsBattleSpacePlayer) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RdsBattleSpacePlayer) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *RdsBattleSpacePlayer) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RdsBattleSpacePlayer) GetCamp() string {
	if x != nil {
		return x.Camp
	}
	return ""
}

func (x *RdsBattleSpacePlayer) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *RdsBattleSpacePlayer) GetExtends() map[string]string {
	if x != nil {
		return x.Extends
	}
	return nil
}

type RdsBattleSpaceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId                  string                  `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	SpaceName                string                  `protobuf:"bytes,2,opt,name=spaceName,proto3" json:"spaceName,omitempty"`
	SpacePassword            string                  `protobuf:"bytes,3,opt,name=spacePassword,proto3" json:"spacePassword,omitempty"`
	SpaceMapURI              string                  `protobuf:"bytes,4,opt,name=spaceMapURI,proto3" json:"spaceMapURI,omitempty"`
	SpaceStarttime           int64                   `protobuf:"varint,5,opt,name=spaceStarttime,proto3" json:"spaceStarttime,omitempty"`
	SpaceState               string                  `protobuf:"bytes,6,opt,name=spaceState,proto3" json:"spaceState,omitempty"`
	SpaceExtend              string                  `protobuf:"bytes,8,opt,name=spaceExtend,proto3" json:"spaceExtend,omitempty"`
	SpaceMasterUid           string                  `protobuf:"bytes,9,opt,name=spaceMasterUid,proto3" json:"spaceMasterUid,omitempty"`
	SpaceMasterClientAddress string                  `protobuf:"bytes,10,opt,name=spaceMasterClientAddress,proto3" json:"spaceMasterClientAddress,omitempty"`
	SpaceMasterClinetID      string                  `protobuf:"bytes,11,opt,name=spaceMasterClinetID,proto3" json:"spaceMasterClinetID,omitempty"`
	SpaceMasterIcon          string                  `protobuf:"bytes,12,opt,name=spaceMasterIcon,proto3" json:"spaceMasterIcon,omitempty"`
	SpaceMasterDisplay       string                  `protobuf:"bytes,13,opt,name=spaceMasterDisplay,proto3" json:"spaceMasterDisplay,omitempty"`
	SpacePlayers             []*RdsBattleSpacePlayer `protobuf:"bytes,14,rep,name=spacePlayers,proto3" json:"spacePlayers,omitempty"`
}

func (x *RdsBattleSpaceData) Reset() {
	*x = RdsBattleSpaceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rdsbattle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdsBattleSpaceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdsBattleSpaceData) ProtoMessage() {}

func (x *RdsBattleSpaceData) ProtoReflect() protoreflect.Message {
	mi := &file_rdsbattle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdsBattleSpaceData.ProtoReflect.Descriptor instead.
func (*RdsBattleSpaceData) Descriptor() ([]byte, []int) {
	return file_rdsbattle_proto_rawDescGZIP(), []int{1}
}

func (x *RdsBattleSpaceData) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpacePassword() string {
	if x != nil {
		return x.SpacePassword
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceMapURI() string {
	if x != nil {
		return x.SpaceMapURI
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceStarttime() int64 {
	if x != nil {
		return x.SpaceStarttime
	}
	return 0
}

func (x *RdsBattleSpaceData) GetSpaceState() string {
	if x != nil {
		return x.SpaceState
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceExtend() string {
	if x != nil {
		return x.SpaceExtend
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceMasterUid() string {
	if x != nil {
		return x.SpaceMasterUid
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceMasterClientAddress() string {
	if x != nil {
		return x.SpaceMasterClientAddress
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceMasterClinetID() string {
	if x != nil {
		return x.SpaceMasterClinetID
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceMasterIcon() string {
	if x != nil {
		return x.SpaceMasterIcon
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpaceMasterDisplay() string {
	if x != nil {
		return x.SpaceMasterDisplay
	}
	return ""
}

func (x *RdsBattleSpaceData) GetSpacePlayers() []*RdsBattleSpacePlayer {
	if x != nil {
		return x.SpacePlayers
	}
	return nil
}

var File_rdsbattle_proto protoreflect.FileDescriptor

var file_rdsbattle_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x64, 0x73, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x72, 0x64, 0x73, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xaa, 0x02, 0x0a,
	0x14, 0x52, 0x64, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x46, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x72, 0x64, 0x73, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x52, 0x64, 0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x1a, 0x3a, 0x0a,
	0x0c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb3, 0x04, 0x0a, 0x12, 0x52, 0x64,
	0x73, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x55, 0x52, 0x49, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x55, 0x52, 0x49,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30,
	0x0a, 0x13, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69,
	0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x6e, 0x65, 0x74, 0x49, 0x44,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x63, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x72, 0x64, 0x73, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x64, 0x73,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42,
	0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x72, 0x64, 0x73, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rdsbattle_proto_rawDescOnce sync.Once
	file_rdsbattle_proto_rawDescData = file_rdsbattle_proto_rawDesc
)

func file_rdsbattle_proto_rawDescGZIP() []byte {
	file_rdsbattle_proto_rawDescOnce.Do(func() {
		file_rdsbattle_proto_rawDescData = protoimpl.X.CompressGZIP(file_rdsbattle_proto_rawDescData)
	})
	return file_rdsbattle_proto_rawDescData
}

var file_rdsbattle_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rdsbattle_proto_goTypes = []interface{}{
	(*RdsBattleSpacePlayer)(nil), // 0: rdsstruct.RdsBattleSpacePlayer
	(*RdsBattleSpaceData)(nil),   // 1: rdsstruct.RdsBattleSpaceData
	nil,                          // 2: rdsstruct.RdsBattleSpacePlayer.ExtendsEntry
}
var file_rdsbattle_proto_depIdxs = []int32{
	2, // 0: rdsstruct.RdsBattleSpacePlayer.extends:type_name -> rdsstruct.RdsBattleSpacePlayer.ExtendsEntry
	0, // 1: rdsstruct.RdsBattleSpaceData.spacePlayers:type_name -> rdsstruct.RdsBattleSpacePlayer
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rdsbattle_proto_init() }
func file_rdsbattle_proto_init() {
	if File_rdsbattle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rdsbattle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdsBattleSpacePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rdsbattle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdsBattleSpaceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rdsbattle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rdsbattle_proto_goTypes,
		DependencyIndexes: file_rdsbattle_proto_depIdxs,
		MessageInfos:      file_rdsbattle_proto_msgTypes,
	}.Build()
	File_rdsbattle_proto = out.File
	file_rdsbattle_proto_rawDesc = nil
	file_rdsbattle_proto_goTypes = nil
	file_rdsbattle_proto_depIdxs = nil
}
